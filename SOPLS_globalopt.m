function globalopt_results=SOPLS_globalopt(X,Y,options,Amax,cvi,plots)
% globalopt_results=SOPLS_globalopt(X,Y,options,Amax,cvi,plots)
%
% INPUT
% X is cell array with data blocks (as saisir structures)
% Y is saisir structure with response(s)
% options default settings is generated by running "options=SOPLS(X,Y)"
%

if isscalar(Amax); Amax=repmat(Amax,1,length(X)); end
wb=1;

if nargin<6
    plots=1;
end


%set up all combinations of components
if isempty(options.nCompAlternatives)
    N=fullfact(Amax+1)-1;
else
    N=options.nCompAlternatives;
end


n=size(X{1}.d,1);

if ischar(cvi)
    %set cv segments
    switch lower(cvi)
        case 'loo'
            cvi=1:n;
        case 'r10'
            nn=floor(n/10);
            rest=n-10*nn;
            cvi=[repmat(1:10,1,nn) 1:rest];
            cvi=cvi(randperm(n));
        case 'r20'
            nn=floor(n/20);
            rest=n-20*nn;
            cvi=[repmat(1:20,1,nn) 1:rest];
            cvi=cvi(randperm(n));
        case 'syst10'
            nn=floor(n/10);
            rest=n-10*nn;
            cvi=[repmat(1:10,1,nn) 1:rest];
        case 'syst20'
            nn=floor(n/20);
            rest=n-20*nn;
            cvi=[repmat(1:20,1,nn) 1:rest];
        otherwise
            if length(cvi)~=n
                error('cvi segments does not match number of samples')
            end
    end
end


if wb==1
    H=waitbar(0,['Global SO-PLS optimation with ' num2str(size(N,1)) ' combinations...']);
end

%zero components in all blocks
RMSEcal(1,:)=sqrt(mean((repmat(mean(Y.d),n,1)-Y.d).^2));
Yval=zeros(size(Y.d));
for i=1:max(cvi)
    idx_in=find(cvi~=i);
    idx_out=find(cvi==i);
    Yval(idx_out,:)=repmat(mean(Y.d(idx_in,:)),length(idx_out),1);
end
RMSEcv(1,:)=sqrt(mean((Yval-Y.d).^2));

for i=2:size(N,1)

    if wb==1
        waitbar(i/size(N,1),H)
    end
    options.nComps=N(i,:);
    mod=SOPLS(X,Y,options);
    mod=crossval_SOPLS(mod,cvi,0);
    ExpVarVal(i,:)=mod.cvres.ExpVarY;
    ExpVarCal(i,:)=mod.ExpVarY;
    RMSEcv(i,:)=mod.cvres.RMSEcv;
    RMSEcal(i,:)=mod.RMSEcal;


end

if wb==1
    close(H)
end



if size(Y.d,2)>1
    EVval=mean(ExpVarVal')';
    EVcal=mean(ExpVarCal')';
else
    EVval=ExpVarVal;
    EVcal=ExpVarCal;
end

EVval_max=zeros(1,sum(Amax)+1);
EVcal_max=zeros(1,sum(Amax)+1);

RMSEP_min=ones(size(Y.d,2),sum(Amax)+1)*inf;
for i=1:size(N,1)
    if EVval_max(sum(N(i,:))+1)<EVval(i)
        EVval_max(sum(N(i,:))+1)=EVval(i);
    end

    if EVcal_max(sum(N(i,:))+1)<EVcal(i)
        EVcal_max(sum(N(i,:))+1)=EVcal(i);
    end

    idx=find(RMSEP_min(:,sum(N(i,:))+1)>RMSEcv(i,:)');
    if ~isempty(idx)
        RMSEP_min(idx,sum(N(i,:))+1)=RMSEcv(i,idx)';
    end
end

ResVar0=sum((Y.d-repmat(mean(Y.d),n,1)).^2);
ResVar=mean(ResVar0)*(1-EVval_max/100);
crit = [1:length(ResVar)-1]'*0.02*mean(ResVar(1)) + mean(ResVar(2:end)',2);
[~, Aopt] = min(crit);
idx1=find(sum(N,2)==Aopt);
[~,idx2]=min(RMSEcv(idx1));
Aselected=N(idx1(idx2),:);

globalopt_results.N=N;
globalopt_results.RMSEcal=RMSEcal;
globalopt_results.RMSEcv=RMSEcv;
globalopt_results.ExpVarcal=ExpVarCal;
globalopt_results.ExpVarcv=ExpVarVal;
globalopt_results.Aselected=Aselected;





if plots~=0

    figure;
    plot(0:sum(Amax),EVcal_max,'b')
    hold on
    plot(0:sum(Amax),EVval_max,'r')
    legend('Cal','Val')
    text(sum(N')',EVval,num2str(N),'color','r')
    text(sum(N')',EVcal,num2str(N),'color','b')
    xlabel('Total number of components')
    ylabel('Average explained variance (%)')
    title('Average over all responses')

    if size(Y.d,2)<10
        for i=1:size(Y.d,2)
            figure;
            plot(0:sum(Amax),RMSEP_min(i,:),'k')
            hold on
            plot(sum(N')',RMSEcv(:,i),'.k')
            text(sum(N')',RMSEcv(:,i),num2str(N),'color','k')
            xlabel('Total number of components')
            ylabel('RMSECV')
            title(Y.v(i,:),'Interpreter','none')
        end
    end

    if size(Y.d,2)>1
        figure;
        plot(0:sum(Amax),mean(RMSEP_min),'k')
        hold on
        text(sum(N')',mean(RMSEcv,2),num2str(N),'color','k')
        xlabel('Total number of components')
        ylabel('RMSECV')
        title('Average over all responses')
    end

end


